{"ast":null,"code":"import _slicedToArray from\"/Users/a.../Desktop/CI_6206/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect}from\"react\";import{useState}from\"react\";import{useHistory}from\"react-router\";import CourseEntryCard from\"./course_entrycard\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function CourseList(){var history=useHistory();var token=localStorage.getItem('Token');var _useState=useState([]),_useState2=_slicedToArray(_useState,2),courseList=_useState2[0],setCourseList=_useState2[1];useEffect(function(){var url=\"http://34.126.85.190:8080/course\";var request=new Request(url,{method:\"get\",body:null,headers:new Headers({'Token':token,'Accept':\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"})});fetch(request).then(function(res){console.log(token);return res.json();}).then(function(json){setCourseList(json.course_list);console.log(json.course_list);}).catch(function(error){console.log(error);});},[]);var logOut=function logOut(){localStorage.setItem('Token','');localStorage.setItem('username','');window.dispatchEvent(new Event('storage'));history.push(\"/\");};return/*#__PURE__*/_jsxs(\"div\",{className:\"courseShow\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"professorNav\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"logOut\",onClick:logOut,children:\"Log out\"}),/*#__PURE__*/_jsx(\"span\",{className:\"returnDashboard\",onClick:function onClick(){return history.push(\"/dashboard\");},children:\"Dashboard\"})]}),/*#__PURE__*/_jsx(\"ul\",{className:\"profList\",children:courseList.map(function(course){return/*#__PURE__*/_jsx(CourseEntryCard,{courseID:course.courseID,courseName:[course.courseName,course.professorName]});})})]});}export default CourseList;","map":{"version":3,"sources":["/Users/a.../Desktop/CI_6206/project/src/course_show/index.js"],"names":["useEffect","useState","useHistory","CourseEntryCard","CourseList","history","token","localStorage","getItem","courseList","setCourseList","url","request","Request","method","body","headers","Headers","fetch","then","res","console","log","json","course_list","catch","error","logOut","setItem","window","dispatchEvent","Event","push","map","course","courseID","courseName","professorName"],"mappings":"0JAAA,OAASA,SAAT,KAA0B,OAA1B,CACA,OAASC,QAAT,KAAyB,OAAzB,CACA,OAASC,UAAT,KAA2B,cAA3B,CACA,MAAOC,CAAAA,eAAP,KAA4B,oBAA5B,C,wFAEA,QAASC,CAAAA,UAAT,EAAsB,CAClB,GAAIC,CAAAA,OAAO,CAAGH,UAAU,EAAxB,CACA,GAAII,CAAAA,KAAK,CAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ,CACA,cAAoCP,QAAQ,CAAC,EAAD,CAA5C,wCAAOQ,UAAP,eAAmBC,aAAnB,eAEAV,SAAS,CAAC,UAAM,CACZ,GAAMW,CAAAA,GAAG,CAAG,kCAAZ,CACA,GAAMC,CAAAA,OAAO,CAAG,GAAIC,CAAAA,OAAJ,CAAYF,GAAZ,CAAiB,CAC3BG,MAAM,CAAE,KADmB,CAE3BC,IAAI,CAAE,IAFqB,CAG3BC,OAAO,CAAC,GAAIC,CAAAA,OAAJ,CAAa,CACrB,QAASX,KADY,CAErB,SAAU,mCAFW,CAGrB,eAAgB,kBAHK,CAAb,CAHmB,CAAjB,CAAhB,CASEY,KAAK,CAACN,OAAD,CAAL,CAAeO,IAAf,CAAoB,SAACC,GAAD,CAAS,CACzBC,OAAO,CAACC,GAAR,CAAYhB,KAAZ,EACA,MAAOc,CAAAA,GAAG,CAACG,IAAJ,EAAP,CACH,CAHD,EAGGJ,IAHH,CAGQ,SAAAI,IAAI,CAAI,CACZb,aAAa,CAACa,IAAI,CAACC,WAAN,CAAb,CACAH,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,WAAjB,EACH,CAND,EAMGC,KANH,CAMS,SAAAC,KAAK,CAAI,CACdL,OAAO,CAACC,GAAR,CAAYI,KAAZ,EACH,CARD,EASL,CApBQ,CAqBT,EArBS,CAAT,CAuBA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACjBpB,YAAY,CAACqB,OAAb,CAAqB,OAArB,CAA8B,EAA9B,EACArB,YAAY,CAACqB,OAAb,CAAqB,UAArB,CAAiC,EAAjC,EACAC,MAAM,CAACC,aAAP,CAAqB,GAAIC,CAAAA,KAAJ,CAAU,SAAV,CAArB,EACA1B,OAAO,CAAC2B,IAAR,CAAa,GAAb,EACH,CALD,CAOA,mBACE,aAAK,SAAS,CAAC,YAAf,wBACI,aAAK,SAAS,CAAC,cAAf,wBACM,aAAM,SAAS,CAAC,QAAhB,CAAyB,OAAO,CAAEL,MAAlC,qBADN,cAIM,aAAM,SAAS,CAAC,iBAAhB,CAAkC,OAAO,CAAE,yBAAItB,CAAAA,OAAO,CAAC2B,IAAR,CAAa,YAAb,CAAJ,EAA3C,uBAJN,GADJ,cASM,WAAI,SAAS,CAAC,UAAd,UACEvB,UAAU,CAACwB,GAAX,CAAe,SAACC,MAAD,CAAY,CAAE,mBAAO,KAAC,eAAD,EAAiB,QAAQ,CAAEA,MAAM,CAACC,QAAlC,CAA4C,UAAU,CAAE,CAACD,MAAM,CAACE,UAAR,CAAoBF,MAAM,CAACG,aAA3B,CAAxD,EAAP,CAA8G,CAA3I,CADF,EATN,GADF,CAeD,CAED,cAAejC,CAAAA,UAAf","sourcesContent":["import { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport CourseEntryCard from \"./course_entrycard\";\n\nfunction CourseList() {\n    let history = useHistory();\n    let token = localStorage.getItem('Token')\n    const [courseList, setCourseList] = useState([]);\n\n    useEffect(() => {\n        const url = \"http://34.126.85.190:8080/course\";\n        const request = new Request(url, {\n              method: \"get\",\n              body: null,\n              headers:new Headers ({\n              'Token': token,\n              'Accept': \"application/json, text/plain, */*\",\n              \"Content-Type\": \"application/json\"\n              })\n          })      \n          fetch(request).then((res) => {\n              console.log(token)\n              return res.json()\n          }).then(json => {\n              setCourseList(json.course_list) \n              console.log(json.course_list)\n          }).catch(error => {\n              console.log(error);\n          });\n    }\n  , [])\n\n    const logOut = () => {\n        localStorage.setItem('Token', '')\n        localStorage.setItem('username', '')\n        window.dispatchEvent(new Event('storage'))\n        history.push(\"/\")\n    }\n\n    return (\n      <div className=\"courseShow\">\n          <div className=\"professorNav\">\n                <span className=\"logOut\" onClick={logOut}>\n                    Log out\n                </span>\n                <span className=\"returnDashboard\" onClick={()=>history.push(\"/dashboard\")}>\n                    Dashboard\n                </span>\n            </div>\n            <ul className=\"profList\">\n            { courseList.map((course) => { return <CourseEntryCard courseID={course.courseID} courseName={[course.courseName, course.professorName]} /> }) }\n          </ul>\n      </div>\n    );\n  }\n  \n  export default CourseList;"]},"metadata":{},"sourceType":"module"}