{"ast":null,"code":"var _jsxFileName = \"/Users/a.../Desktop/CI_6206/project/src/course/index.js\",\n    _s = $RefreshSig$();\n\nimport { useHistory } from \"react-router\";\nimport Card from '../course_card';\nimport './index.css';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Choice(props) {\n  _s();\n\n  let history = useHistory();\n  let token = localStorage.getItem('Token');\n  let previousCourseID = props.location.state.course.courseID;\n  let previousCourseName = props.location.state.course.courseName[0];\n  let previousProfName = props.location.state.course.courseName[1];\n  console.log('123', props.location.state);\n  const [courseCR, setCourseCR] = useState([]);\n  useEffect(() => {\n    const url = `http://34.126.85.190:8080/course-CR?course_id=${previousCourseID}`;\n    const request = new Request(url, {\n      method: \"get\",\n      body: null,\n      headers: new Headers({\n        'Token': token,\n        'Accept': \"application/json, text/plain, */*\",\n        \"Content-Type\": \"application/json\"\n      })\n    });\n    fetch(request).then(res => {\n      return res.json();\n    }).then(json => {\n      console.log(json);\n      setCourseCR(json.course_cr_list);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n\n  const logOut = () => {\n    localStorage.setItem('Token', '');\n    localStorage.setItem('username', '');\n    window.dispatchEvent(new Event('storage'));\n    history.push(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"professorContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"professorNav\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"logOut\",\n        onClick: logOut,\n        children: \"Log out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"returnDashboard\",\n        onClick: () => history.push(\"/dashboard\"),\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"createProfComment\",\n        onClick: () => history.push({\n          pathname: '/courserate',\n          state: {\n            'course': props.location.state.course\n          }\n        }),\n        children: \"Create new rate and comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: [\"The comments on the course \", previousCourseID, \" \", previousCourseName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profCommentArea\",\n      children: courseCR.map(course => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          courseID: course.courseID,\n          name: course.professorName,\n          score: course.rating,\n          comment: course.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 53\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Choice, \"cxgkOpJpuBUjVWobJ0tcc85GrEg=\", false, function () {\n  return [useHistory];\n});\n\n_c = Choice;\nexport default Choice;\n\nvar _c;\n\n$RefreshReg$(_c, \"Choice\");","map":{"version":3,"sources":["/Users/a.../Desktop/CI_6206/project/src/course/index.js"],"names":["useHistory","Card","useEffect","useState","Choice","props","history","token","localStorage","getItem","previousCourseID","location","state","course","courseID","previousCourseName","courseName","previousProfName","console","log","courseCR","setCourseCR","url","request","Request","method","body","headers","Headers","fetch","then","res","json","course_cr_list","catch","error","logOut","setItem","window","dispatchEvent","Event","push","pathname","map","professorName","rating","comment"],"mappings":"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","sourcesContent":["import { useHistory } from \"react-router\";\nimport Card from '../course_card'\nimport './index.css'\nimport { useEffect, useState } from 'react';\n\nfunction Choice(props) {\n    let history = useHistory();\n    let token = localStorage.getItem('Token');\n    let previousCourseID = props.location.state.course.courseID;\n    let previousCourseName = props.location.state.course.courseName[0]\n    let previousProfName = props.location.state.course.courseName[1]\n    console.log('123', props.location.state)\n    const [courseCR, setCourseCR] = useState([])\n\n    useEffect(() => {\n        const url = `http://34.126.85.190:8080/course-CR?course_id=${previousCourseID}`;\n        const request = new Request(url, {\n              method: \"get\",\n              body: null,\n              headers:new Headers ({\n              'Token': token,\n              'Accept': \"application/json, text/plain, */*\",\n              \"Content-Type\": \"application/json\"\n              })\n          })      \n          fetch(request).then((res) => {\n              return res.json()\n          }).then(json => {\n              console.log(json)\n              setCourseCR(json.course_cr_list) \n          }).catch(error => {\n              console.log(error);\n          });\n    }\n  , [])\n\n    const logOut = () => {\n        localStorage.setItem('Token', '')\n        localStorage.setItem('username', '')\n        window.dispatchEvent(new Event('storage'))\n        history.push(\"/\")\n    }\n\n    return (\n        <div className=\"professorContainer\">\n            <div className=\"professorNav\">\n                <span className=\"logOut\" onClick={logOut}>\n                    Log out\n                </span>\n                <span className=\"returnDashboard\" onClick={()=>history.push(\"/dashboard\")}>\n                    Dashboard\n                </span>\n                <span className=\"createProfComment\" onClick={()=>history.push({pathname:'/courserate', state:{'course':props.location.state.course}})}>\n                    Create new rate and comment\n                </span>\n            </div>\n            <h2 className=\"title\">The comments on the course {previousCourseID} {previousCourseName}</h2>\n            <div className=\"profCommentArea\">\n                { courseCR.map((course) => { return <Card courseID={course.courseID} name={course.professorName} score={course.rating} comment={course.comment} /> }) }  \n            </div>\n        </div>\n    );\n  }\n  \n  export default Choice;"]},"metadata":{},"sourceType":"module"}