{"ast":null,"code":"var _jsxFileName = \"/Users/a.../Desktop/CI_6206/project/src/professor/index.js\",\n    _s = $RefreshSig$();\n\nimport './index.css';\nimport Card from '../professorcard';\nimport Rate from '../professor_rate';\nimport { useHistory } from 'react-router';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home(props) {\n  _s();\n\n  let history = useHistory();\n  let token = localStorage.getItem('Token');\n  let previousProf = props.location.state.profName;\n  const [profCR, setProfCR] = useState([]);\n  useEffect(() => {\n    const url = `http://34.126.85.190:8080/professor-CR?professor_name=${previousProf}`;\n    const request = new Request(url, {\n      method: \"get\",\n      body: null,\n      headers: new Headers({\n        'Token': token,\n        'Accept': \"application/json, text/plain, */*\",\n        \"Content-Type\": \"application/json\"\n      })\n    });\n    fetch(request).then(res => {\n      return res.json();\n    }).then(json => {\n      console.log(json);\n      setProfCR(json.professor_cr_list);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n\n  const logOut = () => {\n    localStorage.clear();\n    history.push(\"/\");\n  };\n\n  console.log(profCR);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"professorContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"professorNav\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"logOut\",\n        onClick: logOut,\n        children: \"Log out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"returnDashboard\",\n        onClick: () => history.push(\"/dashboard\"),\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"createProfComment\",\n        onClick: () => history.push({\n          pathname: \"/profrate\",\n          state: {\n            'course': profCR[0]\n          }\n        }),\n        children: \"Create new rate and comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"The comments on professors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profCommentArea\",\n      children: profCR.map(prof => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          name: prof.professorName,\n          score: prof.rating,\n          comment: prof.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 49\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"DuN+VTIlG1oxvdOPnKChUDDCKb4=\", false, function () {\n  return [useHistory];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/a.../Desktop/CI_6206/project/src/professor/index.js"],"names":["Card","Rate","useHistory","useEffect","useState","Home","props","history","token","localStorage","getItem","previousProf","location","state","profName","profCR","setProfCR","url","request","Request","method","body","headers","Headers","fetch","then","res","json","console","log","professor_cr_list","catch","error","logOut","clear","push","pathname","map","prof","professorName","rating","comment"],"mappings":"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","sourcesContent":["import './index.css';\nimport Card from '../professorcard'\nimport Rate from '../professor_rate'\nimport { useHistory } from 'react-router';\nimport { useEffect, useState } from 'react';\n\nfunction Home(props) {\n    let history = useHistory();\n    let token = localStorage.getItem('Token')\n    let previousProf = props.location.state.profName;\n\n    const [profCR, setProfCR] = useState([])\n\n    useEffect(() => {\n        const url = `http://34.126.85.190:8080/professor-CR?professor_name=${previousProf}`;\n        const request = new Request(url, {\n              method: \"get\",\n              body: null,\n              headers:new Headers ({\n              'Token': token,\n              'Accept': \"application/json, text/plain, */*\",\n              \"Content-Type\": \"application/json\"\n              })\n          })      \n          fetch(request).then((res) => {\n              return res.json()\n          }).then(json => {\n              console.log(json)\n              setProfCR(json.professor_cr_list) \n          }).catch(error => {\n              console.log(error);\n          });\n    }\n  , [])\n\n    const logOut = () => {\n        localStorage.clear()\n        history.push(\"/\")\n    }\n\n    console.log(profCR)\n    return (\n        <div className=\"professorContainer\">\n            <div className=\"professorNav\">\n                <span className=\"logOut\" onClick={logOut}>\n                    Log out\n                </span>\n                <span className=\"returnDashboard\" onClick={()=>history.push(\"/dashboard\")}>\n                    Dashboard\n                </span>\n                <span className=\"createProfComment\" onClick={()=>history.push({pathname:\"/profrate\", state:{'course':profCR[0]}})}>\n                    Create new rate and comment\n                </span>\n            </div>\n            <h2 className=\"title\">The comments on professors</h2>\n            <div className=\"profCommentArea\">\n                { profCR.map((prof) => { return <Card name={prof.professorName} score={prof.rating} comment={prof.comment} /> }) }\n                \n            </div>\n        </div>\n    );\n  }\n  \n  export default Home;"]},"metadata":{},"sourceType":"module"}