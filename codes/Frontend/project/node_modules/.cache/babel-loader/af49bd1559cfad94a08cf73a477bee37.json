{"ast":null,"code":"var _jsxFileName = \"/Users/a.../Desktop/CI_6206/project/src/course_rate/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { RangeStepInput } from 'react-range-step-input';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CourseRate(props) {\n  _s();\n\n  let history = useHistory();\n  let token = localStorage.getItem('Token');\n  let userName = localStorage.getItem('userName');\n  let previousCourse = props.location.state.course;\n  const [professorName, setProfName] = useState(previousCourse.professorName);\n  const [courseID, setCourseID] = useState(previousCourse.courseID);\n  const [profRate, setProfRate] = useState('3');\n  const [profComment, setProfComment] = useState('');\n\n  const clickEntry = () => {\n    const prof_rate = {\n      'professor_name': professorName,\n      'username': userName,\n      'course_id': courseID,\n      'rate': parseInt(profRate),\n      'comment': profComment\n    };\n    console.log(prof_rate);\n    const request = new Request('http://34.126.85.190:8080/course-CR/add', {\n      method: \"POST\",\n      body: JSON.stringify(prof_rate),\n      headers: {\n        'Token': token,\n        Accept: \"application/json, text/plain, */*\",\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    fetch(request).then(res => {\n      let temp = res.json();\n      return temp;\n    }).then(json => {\n      if (json.info === 'Success') {\n        alert('CR creation success');\n        history.push('/dashboard');\n      } else {\n        alert('This professor CR failed to create');\n      }\n\n      console.log(json);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"courseRateForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a new comment and rate for a Course\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/dashboard\",\n      children: \"Go back to course comments page \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"profName\",\n        label: \"Professor Name\",\n        defaultValue: previousCourse.professorName,\n        id: \"outlined-basic\",\n        variant: \"outlined\",\n        margin: \"normal\",\n        onChange: e => setProfName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"courseID\",\n        label: \"Course ID\",\n        defaultValue: previousCourse.courseID,\n        id: \"outlined-basic\",\n        variant: \"outlined\",\n        margin: \"normal\",\n        onChange: e => setCourseID(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Rate: \", profRate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RangeStepInput, {\n        min: 0,\n        max: 5,\n        value: profRate,\n        step: 1,\n        onChange: e => setProfRate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"courseComments\",\n        name: \"courseComments\",\n        maxLength: \"100\",\n        onChange: e => setProfComment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"small green button\",\n      onClick: clickEntry,\n      children: \"Complete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CourseRate, \"k1oFwDUj91NqWk4MHiwxcqZOqlM=\", false, function () {\n  return [useHistory];\n});\n\n_c = CourseRate;\nexport default CourseRate;\n\nvar _c;\n\n$RefreshReg$(_c, \"CourseRate\");","map":{"version":3,"sources":["/Users/a.../Desktop/CI_6206/project/src/course_rate/index.js"],"names":["useState","useHistory","TextField","RangeStepInput","CourseRate","props","history","token","localStorage","getItem","userName","previousCourse","location","state","course","professorName","setProfName","courseID","setCourseID","profRate","setProfRate","profComment","setProfComment","clickEntry","prof_rate","parseInt","console","log","request","Request","method","body","JSON","stringify","headers","Accept","fetch","then","res","temp","json","info","alert","push","catch","error","e","target","value"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {RangeStepInput} from 'react-range-step-input';\nimport './index.css'\n\nfunction CourseRate(props) {\n    let history = useHistory();\n    let token = localStorage.getItem('Token')\n    let userName = localStorage.getItem('userName')\n    let previousCourse = props.location.state.course;\n    const [professorName, setProfName] = useState(previousCourse.professorName)\n    const [courseID, setCourseID] = useState(previousCourse.courseID)\n    const [profRate, setProfRate] = useState('3')\n    const [profComment, setProfComment] = useState('')\n\n    const clickEntry = () => {\n        const prof_rate = {'professor_name': professorName, 'username': userName, 'course_id': courseID,'rate': parseInt(profRate), 'comment':profComment}\n        console.log(prof_rate)\n        const request = new Request('http://34.126.85.190:8080/course-CR/add', {\n            method: \"POST\",\n            body: JSON.stringify(prof_rate),\n            headers: {\n                'Token': token,\n                Accept: \"application/json, text/plain, */*\",\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        fetch(request)\n        .then(res => {\n          let temp = res.json()\n          return temp\n        })\n        .then(json => {\n          if (json.info === 'Success') {\n            alert('CR creation success')\n            history.push('/dashboard')\n          } else {\n            alert('This professor CR failed to create')\n          }\n          console.log(json)\n\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    }\n\n    return (\n        <div className=\"courseRateForm\">\n            <h2>Create a new comment and rate for a Course</h2>\n            <a href=\"/dashboard\">Go back to course comments page </a>\n            <div>\n                <TextField\n                    name=\"profName\"\n                    label=\"Professor Name\"\n                    defaultValue={previousCourse.professorName}\n                    id=\"outlined-basic\"\n                    variant='outlined'\n                    margin=\"normal\"\n                    onChange={e => setProfName(e.target.value)}\n                />\n            </div>\n            <div>\n                <TextField\n                    name=\"courseID\"\n                    label=\"Course ID\"\n                    defaultValue={previousCourse.courseID}\n                    id=\"outlined-basic\"\n                    variant='outlined'\n                    margin=\"normal\"\n                    onChange={e => setCourseID(e.target.value)}\n                />\n            </div> \n            <div>\n                <h4>Rate: {profRate}</h4>\n                <RangeStepInput min={0} max={5} value={profRate} step={1} onChange={(e)=>setProfRate(e.target.value)}/>   \n            </div>\n            <div>\n                <p>Comments</p>\n                <textarea id=\"courseComments\" name=\"courseComments\" maxLength=\"100\"\n                onChange={(e)=>setProfComment(e.target.value)}>\n                </textarea>\n            </div>\n            <button className=\"small green button\" onClick={clickEntry}>\n                Complete\n            </button>\n        </div>\n    );\n  }\n  \n  export default CourseRate;"]},"metadata":{},"sourceType":"module"}